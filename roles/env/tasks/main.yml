---
- name: Clone git repositories
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    accept_hostkey: yes
  with_items:
    - "{{ env_git_repositories }}"

- name: Run dotfiles setup
  shell: bash setup.sh
  args:
    chdir: "{{ env_ghq_root }}/ohtomi/dotfiles"

- name: Create pkg directory
  file:
    path: ~/pkg
    state: directory

- name: Download pkg files
  get_url:
    url: "{{ item.url }}"
    dest: "~/pkg/{{ item.file }}"
  with_items:
    - "{{ env_pkg_urls }}"

- name: Run pkg installer
  shell: installer -package {{ lookup('env', 'HOME') }}/pkg/{{ item.file }} -target /
  become: yes
  with_items:
    - "{{ env_pkg_urls }}"

- name: Create workbench directory for kindlizer
  file:
    path: ~/workbench/kindlizer
    state: directory

- name: Add "{{ env_shell }}" to /etc/shells
  lineinfile:
    dest: /etc/shells
    line: "{{env_shell }}"
  become: yes

- name: Check if current shell is "{{ env_shell }}"
  shell: bash -cl 'echo $SHELL' | grep -F "{{ env_shell }}"
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change shell

- name: Flush handlers
  meta: flush_handlers

- name: Run other setup command
  shell: "{{ item.shell }}"
  args:
    chdir: "{{ item.cwd }}"
    removes: "{{ item.name }}"
  become: "{{ item.become | default('no') }}"
  with_items:
    - "{{ env_setup_commands }}"
