---
- name: Install go packages
  shell: go get -u {{ item.path }}
  with_items:
    - "{{ lang_go_packages }}"

- name: Install python packages via pip
  pip:
    name: "{{ item.name }}"
    state: "{{ item.state | default('latest') }}"
    executable: pip3
  with_items:
    - "{{ lang_pip_packages }}"

- name: Install Ruby via rbenv
  shell: bash -cl 'rbenv install "{{ lang_ruby_version }}"'
  args:
    creates: "/usr/local/var/rbenv/versions/{{ lang_ruby_version }}/bin/ruby"

- name: Check if Ruby version is "{{ lang_ruby_version }}"
  shell: bash -cl 'rbenv versions' | grep -F "* {{ lang_ruby_version }}"
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Ruby version

- name: Flush handlers
  meta: flush_handlers

- name: Install gem pacakges
  gem:
    name: "{{ item.name }}"
    include_doc: yes
    state: "{{ item.state | default('latest') }}"
  with_items:
    - "{{ lang_gem_packages }}"

- name: Install Java via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install java {{ lang_java_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/java/{{ lang_java_version }}/bin/java"

- name: Check if Java version is "{{ lang_java_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current java | grep -F "{{ lang_java_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Java version

- name: Install Groovy via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install groovy {{ lang_groovy_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/groovy/{{ lang_groovy_version }}/bin/groovy"

- name: Check if Groovy version is "{{ lang_groovy_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current groovy | grep -F "{{ lang_groovy_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Groovy version

- name: Install Scala via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install scala {{ lang_scala_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/scala/{{ lang_scala_version }}/bin/scala"

- name: Check if Scala version is "{{ lang_scala_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current scala | grep -F "{{ lang_scala_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Scala version

- name: Install Kotlin via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install kotlin {{ lang_kotlin_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/kotlin/{{ lang_kotlin_version }}/bin/kotlin"

- name: Check if Kotlin version is "{{ lang_kotlin_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current kotlin | grep -F "{{ lang_kotlin_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Kotlin version

- name: Install Gradle via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install gradle {{ lang_gradle_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/gradle/{{ lang_gradle_version }}/bin/gradle"

- name: Check if Gradle version is "{{ lang_gradle_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current gradle | grep -F "{{ lang_gradle_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change Gradle version

- name: Install sbt via sdkman
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk install sbt {{ lang_sbt_version }}
  args:
    executable: /bin/bash
    creates: "~/.sdkman/candidates/sbt/{{ lang_sbt_version }}/bin/sbt"

- name: Check if sbt version is "{{ lang_sbt_version }}"
  shell: source ~/.sdkman/bin/sdkman-init.sh && sdk current sbt | grep -F "{{ lang_sbt_version }}"
  args:
    executable: /bin/bash
  register: res
  check_mode: no
  failed_when: no
  changed_when: res.rc != 0
  notify:
    - Change sbt version
